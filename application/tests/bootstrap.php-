<?php defined('SYSPATH') or die('No direct script access.');

// -- Environment setup --------------------------------------------------------

// Load the core Kohana class
require SYSPATH.'classes/Kohana/Core'.EXT;

if (is_file(APPPATH.'classes/Kohana'.EXT))
{
	// Application extends the core
	require APPPATH.'classes/Kohana'.EXT;
}
else
{
	// Load empty core extension
	require SYSPATH.'classes/Kohana'.EXT;
}

/**
 * Set the default time zone.
 *
 * @link http://kohanaframework.org/guide/using.configuration
 * @link http://www.php.net/manual/timezones
 */
date_default_timezone_set('America/Chicago');

/**
 * Set the default locale.
 *
 * @link http://kohanaframework.org/guide/using.configuration
 * @link http://www.php.net/manual/function.setlocale
 */
setlocale(LC_ALL, 'ua_UA.utf-8');

/**
 * Enable the Kohana auto-loader.
 *
 * @link http://kohanaframework.org/guide/using.autoloading
 * @link http://www.php.net/manual/function.spl-autoload-register
 */
spl_autoload_register(array('Kohana', 'auto_load'));

/**
 * Optionally, you can enable a compatibility auto-loader for use with
 * older modules that have not been updated for PSR-0.
 *
 * It is recommended to not enable this unless absolutely necessary.
 */
//spl_autoload_register(array('Kohana', 'auto_load_lowercase'));

/**
 * Enable the Kohana auto-loader for unserialization.
 *
 * @link http://www.php.net/manual/function.spl-autoload-call
 * @link http://www.php.net/manual/var.configuration#unserialize-callback-func
 */
ini_set('unserialize_callback_func', 'spl_autoload_call');

// -- Configuration and initialization -----------------------------------------

/**
 * Set the default language
 */
I18n::lang('ua-ua');

/**
 * Set Kohana::$environment if a 'KOHANA_ENV' environment variable has been supplied.
 *
 * Note: If you supply an invalid environment name, a PHP warning will be thrown
 * saying "Couldn't find constant Kohana::<INVALID_ENV_NAME>"
 */
if (isset($_SERVER['KOHANA_ENV']))
{
	Kohana::$environment = constant('Kohana::'.strtoupper($_SERVER['KOHANA_ENV']));
}

/**
 * Initialize Kohana, setting the default options.
 *
 * The following options are available:
 *
 * - string   base_url    path, and optionally domain, of your application   NULL
 * - string   index_file  name of your index file, usually "index.php"       index.php
 * - string   charset     internal character set used for input and output   utf-8
 * - string   cache_dir   set the internal cache directory                   APPPATH/cache
 * - integer  cache_life  lifetime, in seconds, of items cached              60
 * - boolean  errors      enable or disable error handling                   TRUE
 * - boolean  profile     enable or disable internal profiling               TRUE
 * - boolean  caching     enable or disable internal caching                 FALSE
 * - boolean  expose      set the X-Powered-By header                        FALSE
 */
$h=$_SERVER['HTTP_HOST'];

Kohana::$environment = ($_SERVER['SERVER_NAME'] !== 'localhost') ? Kohana::PRODUCTION : Kohana::DEVELOPMENT;

Kohana::init(array(
	'base_url'   =>  ($h=="localhost"?'/framework/constructor3/projects2/project_shostkaRDA/':'/'),
 	'index_file' => FALSE,
//'profile'    => Kohana::$environment !== Kohana::PRODUCTION,
	'caching'    => Kohana::$environment === Kohana::PRODUCTION
));

/**
 * Attach the file write to logging. Multiple writers are supported.
 */
Kohana::$log->attach(new Log_File(APPPATH.'logs'));

/**
 * Attach a file reader to config. Multiple readers are supported.
 */
Kohana::$config->attach(new Config_File);

Cookie::$salt = 'jрсГ*(№"ролс98(:*?%:"?%;%ljklhj:;65)(ИТИТОЧС()ыо';

/**
 * Enable modules. Modules are referenced by a relative or absolute path.
 */
Kohana::modules(array(
'sonjaCore' => MODPATH.'sonjaCore', // Core
'sonjaAdmin' => MODPATH.'sonjaAdmin', // default admin panel 
	'auth'       => MODPATH.'auth',       // Basic authentication
 'cache'      => MODPATH.'cache',      // Caching with multiple backends
// 'codebench'  => MODPATH.'codebench',  // Benchmarking tool
 'database'   => MODPATH.'database',   // Database access
// 'image'      => MODPATH.'image',      // Image manipulation
// 'minion'     => MODPATH.'minion',     // CLI Tasks
// 'orm'        => MODPATH.'orm',        // Object Relationship Mapping
 'unittest'   => MODPATH.'unittest',   // Unit testing
// 'userguide'  => MODPATH.'userguide',  // User guide and API documentation
  'pagination' => MODPATH.'pagination', // Pagination

));

/**
 * Set the routes. Each route must have a minimum of a name, a URI and a set of
 * defaults for the URI.
 */
/*
 Route::set('mobile', 'm/<param>(-page-<page>).html',
 array( 'page' => '\d+' )
 )
 ->defaults(array(
 'controller' => 'welcome',
 'action'     => 'html',//cat, img
 'mobile' => true,
 'page'=>1
 ));

 Route::set('mobileindex', 'm')
 ->defaults(array(
 'controller' => 'welcome',
 'action'     => 'html',//cat, img
 'mobile' => true,
 'page'=>1,
 'param'=>'index'
 ));
 */
/***
 *
 *  search
 *  tag/search+frase-page-4
 *
 */
define ('ajax', isset($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest' ) ;

//$defaults=array();

Route::set('tag', 'tag/<param>(-page-<page>)', array( 'page' => '\d+', 'tag'=>'\w+' ))
->defaults(array(
		'controller' => 'sonja',
		'action'     => 'tag',//cat, img
		'page'=>1,
		'param'=>''
		
		));


		/*	Route::set('download', 'download/<param>.JPG')
		 ->defaults(array(
		 'controller' => 'download',
		 'action'     => 'index',//cat, img
		 //'mobile' => true,

		 ));
		 */
		/**
		 * for text view(.html) pages or shortlink menu(.htm)
		 * URI has no / in it - consider to be a shortlink
		 */
		
		Route::set('shortLink', '(static/)<shortLink>(-page-<page>).<ext>',
		 array( 'page' => '\d+',
		 'ext'=>'html|htm|json|jsonp',
		 'shortLink'=>'[\d\w-]+',
		 ))->defaults(array(
		 'controller' => 'Sonja',
		 'action'     => 'shortLink',//html|htm|json
		 'mobile' => false,
		 'page'=>1,
		 'shortLink'=>'index'
		 ));

		
		/*Route::set('admin', 'admin(/<action>(/<id>(/<param>)))(/page-<page>)(.<ext>',
		 array(
			'admin'=>'admin',
			'page' => '\d+',
			//'controller'=>'[\w\d\_]{3,}',

			'id'=> '[\d\w]+')
			)->defaults(array(
			'controller' => 'admin',
			'action'     => 'index',
			//	'isBlock'=>ajax===true,//if output page is block or full page
			//	'isTpl'=>ajax!==true,//if output page is template(html,text) or data array/object (json,xml)
			'id'=>0,
			'param'=>'',
			'admin'=>true,
			'page'=>1
			));
			*/


		//URI Has / in its
		//admin/login
		//config_list/list.html
		Route::set('default', '(static/)(<controller>(/<action>(/<id>)))(/page-<page>)(/<param>)(.<ext>)',
		//Route::set('default', '(static/)<controller>',
		array(
		//'admin'=>'admin',
			
					'controller'=>'[\w\d\_]{2,}',
					'action'=>'[\w\d_]{3,}',
					'page' => '\d+',
					'param'=>'[^\.]*',
				/** 
				 *  
				 * @param  EXT
				 * .htm - full page
				 * .html - text block
				 * .json - json data
				 * .jsonp - json wrapped with function
				 */
			'ext'=>'html|htm|json|jsonp',
			'id'=> '[\d\w]+'
			))->defaults(array(
			'controller' => 'Sonja',
			'action'     => 'index',
			//'client'=>ajax===true?"local":"remote",
			 'id'=>0,
			 'param'=>'',
			//'admin'=>false,
			 'ext'=>'htm',
			 'page'=>1
		));

	//	d(Route::all());



			define ('IMG_PATH',"images/");
			define ('LIST_ITEMS',16);



			function myUrlEncode ($url){
				$url=urlencode($url);
				$url=str_replace(".", "DoTt", $url);
				$url=str_replace("%", "pErc", $url);;

				return $url;
			}

			function myUrlDecode ($url){

				$url=str_replace( "DoTt", "." ,$url);
				$url=str_replace( "pErc","%", $url);;
				$url=urldecode($url);
				$s=strpos($url,"-page-");
				if ($s){
					preg_match("/-page-([0-9]){1,}/", $url, $m);
					$url=substr($url,0,$s);

					Request::$current->param('page',$m[1]);
					Request::$current->param('param',$url);
				}


				return $url;
			}
			
			function d($t){
				var_dump($t);
				 //echo 100/0;
			}